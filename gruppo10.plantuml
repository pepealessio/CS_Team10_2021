@startuml

  namespace it.unisa.diem.cs.gruppo10 {
    class it.unisa.diem.cs.gruppo10.ContactMessage {
        + pkfu1 : PublicKey
        + sigBytes : byte[]
        + tsNow : LocalDateTime
        + ContactMessage()
        + verify()
        + verifyBTPair()
        - madeSignature()
    }
  }
  

  namespace it.unisa.diem.cs.gruppo10 {
    class it.unisa.diem.cs.gruppo10.HA {
        - defaultProperties : Properties
        - factoryClient : SSLSocketFactory
        - factoryServer : SSLServerSocketFactory
        - haProperties : Properties
        - keyPair : KeyPair
        - pkPositive : ArrayList<PublicKey>
        + HA()
        + setPositive()
        - bookSwabService()
        - getToken()
        - requestCommitment()
    }
  }
  

  namespace it.unisa.diem.cs.gruppo10 {
    class it.unisa.diem.cs.gruppo10.HAToken {
        + date : LocalDate
        + haPK : PublicKey
        + pkfu : PublicKey
        ~ haSign : byte[]
        + HAToken()
        + verifyToken()
        - signToken()
    }
  }
  

  namespace it.unisa.diem.cs.gruppo10 {
    class it.unisa.diem.cs.gruppo10.MD {
        - commitments : HashMap<PublicKey, byte[]>
        - defaultProperties : Properties
        - idContactMessage : ArrayList<DateId>
        - kmf : KeyManagerFactory
        - mdProperties : Properties
        - tmf : TrustManagerFactory
        + MD()
        + getCommitments()
        + getDateTimeOfCommunicatedID()
        - addContactToContactList()
        - getIds()
        - receiveCommitmentMd()
        - receiveContactMd()
        - sendContactListMd()
    }
  }


  namespace it.unisa.diem.cs.gruppo10 {
    class it.unisa.diem.cs.gruppo10.MD.DateId {
        ~ dateTime : LocalDateTime
        ~ id : byte[]
        + DateId()
        + getDateTime()
        + getId()
    }
  }
  

  namespace it.unisa.diem.cs.gruppo10 {
    class it.unisa.diem.cs.gruppo10.MainSimulation {
        {static} + main()
    }
  }
  

  namespace it.unisa.diem.cs.gruppo10 {
    class it.unisa.diem.cs.gruppo10.PkfCommitment {
        + c : byte[]
        + date : LocalDate
        + pkf : PublicKey
        + pku : PublicKey
        + r : byte[]
        + PkfCommitment()
        + getCommitment()
        {static} + openCommit()
        - generateCommitment()
    }
  }
  

  namespace it.unisa.diem.cs.gruppo10 {
    class it.unisa.diem.cs.gruppo10.User {
        ~ contacts : List<ContactMessage>
        - defaultProperties : Properties
        - keyPair : KeyPair
        - keyPairF : KeyPair
        - kmf : KeyManagerFactory
        - name : String
        - tmf : TrustManagerFactory
        - userProperties : Properties
        + User()
        + bookSwab()
        + communicatePositivity()
        + generateEphemeralKey()
        + getId()
        + getName()
        + getNotify()
        + getPublicKey()
        {static} + meet2user()
        - receiveContact()
        - sendContact()
    }
  }
  

  namespace it.unisa.diem.cs.gruppo10 {
    class it.unisa.diem.cs.gruppo10.Util {
        {static} + resourcesPath : String
        {static} + generateKeyStoreManager()
        {static} + generateTrustStoreManager()
        {static} + getIdFromPk()
        {static} + getIdentityByCertificate()
        {static} + loadDefaultProperties()
        {static} + loadProperties()
        {static} + readKpFromKeyStore()
    }
  }
  

  it.unisa.diem.cs.gruppo10.ContactMessage .up.|> java.io.Serializable
  it.unisa.diem.cs.gruppo10.HA o-- it.unisa.diem.cs.gruppo10.MD : md
  it.unisa.diem.cs.gruppo10.HAToken .up.|> java.io.Serializable
  it.unisa.diem.cs.gruppo10.MD +-left- it.unisa.diem.cs.gruppo10.MD.DateId
  it.unisa.diem.cs.gruppo10.PkfCommitment .up.|> java.io.Serializable
  it.unisa.diem.cs.gruppo10.User o-- it.unisa.diem.cs.gruppo10.PkfCommitment : com


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
